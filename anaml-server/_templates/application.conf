scheduling {
    enableScheduling   = true
    manualRunThreshold = 5
}

httpClient {
    responseHeaderTimeout = 5 minute
    requestTimeout        = 6 minutes
    idleTimeout           = 7 minutes
    logging {
      logBody    = false
      logHeaders = false
    }
}

governance {
  defaultBranch {
    name = official
  }
  masterBranch {
    name = official
  }
  runTypeChecks = false
  allowedLabels = [
    {
      text = "Behaviour",
    },
    {
      text = "Cross Brand",
    },
    {
      text = "Customer",
    },
    {
      text = "Dashboard",
    },
    {
      text = "Decisioning",
    },
    {
      text = "Demographics",
    },
    {
      text = "Engagement",
    },
    {
      text = "Experience",
    },
    {
      text = "Machine Learning",
    },
    {
      text = "PII",
    },
    {
      text = "Product",
    },
    {
      text = "Reference Data",
    },
    {
      text = "Spend",
    },
    {
      text = "Supermarket",
    },
    {
      text = "Targeted",
    },
    {
      text = "Telco",
    },
    {
      text = "australia",
    },
    {
      text = "uk",
    },
    {
      text = "tf",
    }
  ]
  allowedAttributes = [
    {
      key = "Quality Ratings",
      description = "Quality ratings",
      appliesTo = ["feature", "featureset", "featurestore", "table"]
      value = [
        {
          name = "Bronze",
          display {
            emoji = "ðŸ¥‰",
            colour = "#AD8A56"
          }
        },
        {
          name = "Silver",
          display {
            emoji = "ðŸ¥ˆ",
            colour = "#D7D7D7"
          }
        },
        {
          name = "Gold",
          display {
            emoji = "ðŸ¥‡",
            colour = "#C9B037"
          }
        }
      ]
    },
    {
      key = "Entity"
      description = "Legal Entity",
      appliesTo = []
    },
    {
      key = "Project"
      description = "Project name",
      appliesTo = []
    },
    {
      key = "Country"
      description = "Which country did the data originate from",
      appliesTo = ["table","feature"]
    },
    {
      key = "Criticality"
      description = "High/Medium/Low",
      appliesTo = ["featureset", "featurestore"]
    },
    {
      key = "Support Contact"
      description = "Who to contact for support issues",
      appliesTo = ["featureset", "featurestore"]
    },
    {
      key = "Source System"
      description = "Source System",
      appliesTo = ["feature"]
    }
  ]
}

web {
    rootURL               = "https://${anaml_external_domain}"
    host                  = "0.0.0.0"
    port                  = 8080
    hsts                  = true
    responseHeaderTimeout = 5 minutes
    idleTimeout           = 6 minutes
    logBody               = false
    logHeaders            = false
}

licensing {
    licenseKey = $${?ANAML_LICENSE_KEY}
    keyFilePath = "/tmp/licensespring.key"
#     offlineActivation = true
#     offlineRequestPath = "~/"
#     offlineResponseFilePath = "~/ls_activation.lic"
}

pac4j {
    domain        = "${anaml_external_domain}"
    expirySeconds = 86400 # 24h

    login {
      %{ if authentication_method == "oidc" ~}
      adt_type              = "oidc"
      clientId              = $${OIDC_CLIENT_ID}
      secret                = $${OIDC_CLIENT_SECRET}
      discoveryURI          = "${discovery_uri}"
      %{ if permitted_user_group_id != "" ~}
      permittedUsersGroupId = "${permitted_user_group_id}"
      %{ endif ~}
      %{ if length(additional_scopes) > 0 ~}
      additionalScopes = ${ jsonencode(additional_scopes) }
      %{ endif ~}
      %{ else ~}
      adt_type     = "formclient"
      loginUrl     = "/login"
      %{ endif ~}
    }
}
