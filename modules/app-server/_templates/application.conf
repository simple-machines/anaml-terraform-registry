scheduling {
    enableScheduling   = true
    manualRunThreshold = 5
}

httpClient {
    responseHeaderTimeout = 5 minute
    requestTimeout        = 6 minutes
    idleTimeout           = 7 minutes
    logging {
      logBody    = false
      logHeaders = false
    }

    %{ if truststore != null ~}
    https {
      truststore = "${truststore}"
      %{ if use_truststore_password ~}
      truststorePassword = $${JAVAX_NET_SSL_TRUST_STORE_PASSWORD}
      %{endif ~}
    }
    %{endif ~}
}

governance {
  defaultBranch {
    name = official
  }
  masterBranch {
    name = official
  }
  runTypeChecks = ${governance_runTypeChecks}
}

web {
    rootURL               = "${web_rootUrl}"
    host                  = "0.0.0.0"
    port                  = ${port}
    hsts                  = true
    responseHeaderTimeout = 5 minutes
    idleTimeout           = 6 minutes
    logBody               = ${enable_body_debug_logging}
    logHeaders            = ${enable_header_debug_logging}

    %{ if keystore != null && truststore != null ~}
    https {
      keystore = "${keystore}"
      %{ if use_keystore_password ~}
      keystorePassword = $${JAVAX_NET_SSL_KEY_STORE_PASSWORD}
      %{endif ~}

      truststore = "${truststore}"
      %{ if use_truststore_password ~}
      truststorePassword = $${JAVAX_NET_SSL_TRUST_STORE_PASSWORD}
      %{endif ~}
    }
    %{endif ~}

}

licensing {
    %{ if license_key != null ~}
    licenseKey = ${license_key}
    %{ endif ~}
    offlineActivation = ${license_offline_activation}
    %{ if license_offline_response_file_path != null ~}
    offlineResponseFilePath = "${license_offline_response_file_path}"
    %{endif ~}
}

pac4j {
    domain        = "${anaml_external_domain}"
    expirySeconds = 86400 # 24h

    clients = [
      %{ if enable_oidc_client ~}
      {
          adt_type              = "OidcClient"
          clientId              = $${OIDC_CLIENT_ID}
          secret                = $${OIDC_CLIENT_SECRET}
          discoveryURI          = "${discovery_uri}"
          %{ if permitted_user_group_id != "" ~}
          permittedUsersGroupId = "${permitted_user_group_id}"
          %{ endif ~}
          %{ if length(additional_scopes) > 0 ~}
          additionalScopes = ${ jsonencode(additional_scopes) }
          %{ endif ~}
      }
      %{ endif ~}
      %{  if enable_form_client ~}
      {
          adt_type     = "FormClient"
          loginUrl     = "${pac4j_loginUrl}"
      }
      %{ endif ~}
    ]
}


%{ if length(loggers) > 0 ~}
logging {
   %{ for logger, level in loggers }
   "${logger}" = "${level}"
   %{ endfor ~}
}
%{ endif ~}
